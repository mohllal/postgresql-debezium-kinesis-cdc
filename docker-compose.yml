version: '3.9'

services:
  postgres:
    image: postgres:13.6-alpine
    restart: always
    container_name: postgres
    hostname: postgres
    ports:
      - 5439:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory_db
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ['CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./configs/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./scripts/inventory.sql:/docker-entrypoint-initdb.d/inventory.sql
      - ./.docker/postgres:/var/lib/postgresql/data

  localstack:
    image: localstack/localstack:3.3.0
    restart: always
    container_name: localstack
    hostname: localstack
    ports:
      - 4567:4566
      - '4610-4659:4510-4559'
    environment:
      - LOCALSTACK_HOST=localstack
      - SERVICES=events,kinesis,lambda,s3,logs,cloudwatch,sqs
      - DEBUG=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PERSISTENCE=1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_DOCKER_FLAGS="-e AWS_ENDPOINT_URL=http://localhost:4566 -e AWS_DEFAULT_REGION=us-east-1"
      - SQS_ENDPOINT_STRATEGY=path
    healthcheck:
      test: >-
        curl -s localhost:4566/_localstack/init/ready | grep -q '\"completed\": true'
      interval: 10s
      timeout: 5s
      start_period: 1m
      retries: 5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/localstack:/var/lib/localstack
      - ./lambda_function:/lambda
      - ./scripts/localstack-eventbridge-buses.sh:/etc/localstack/init/ready.d/localstack-eventbridge-buses.sh
      - ./scripts/localstack-kinesis-streams.sh:/etc/localstack/init/ready.d/localstack-kinesis-streams.sh
      - ./scripts/localstack-lambda-function.sh:/etc/localstack/init/ready.d/localstack-lambda-function.sh
      - ./scripts/localstack-lambda-kinesis-esm.sh:/etc/localstack/init/ready.d/localstack-lambda-kinesis-esm.sh
      - ./scripts/localstack-sqs-queue.sh:/etc/localstack/init/ready.d/localstack-sqs-queue.sh
      - ./scripts/localstack-sqs-target-eventbridge.sh:/etc/localstack/init/ready.d/localstack-sqs-target-eventbridge.sh

  debezium:
    image: quay.io/debezium/server:2.5.3.Final
    restart: always
    container_name: debezium
    hostname: debezium
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    ports:
      - 8083:8080
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
    healthcheck:
      test: >-
        curl -s localhost:8080/q/health | grep -q '\"status\": \"UP\"'
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.docker/debezium:/debezium/data
      - ./configs/debezium:/debezium/conf
